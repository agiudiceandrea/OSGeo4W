diff --git a/cmake/PyQtMacros.cmake b/cmake/PyQtMacros.cmake
index 774d0427..ece1b3e7 100644
--- a/cmake/PyQtMacros.cmake
+++ b/cmake/PyQtMacros.cmake
@@ -9,15 +9,7 @@ SET(PYUIC_PROG_NAMES pyuic5)
 SET(PYRCC_PROG_NAME pyrcc5)
 
 IF(NOT PYUIC_PROGRAM)
-  IF (MSVC)
-    FIND_PROGRAM(PYUIC_PROGRAM
-      NAMES ${PYUIC_PROG_NAME}.bat
-      PATHS $ENV{LIB_DIR}/bin
-    )
-  ELSE(MSVC)
-    FIND_PROGRAM(PYUIC_PROGRAM NAMES ${PYUIC_PROG_NAMES} PATHS $ENV{LIB_DIR}/bin)
-  ENDIF (MSVC)
-
+  FIND_PROGRAM(PYUIC_PROGRAM NAMES ${PYUIC_PROG_NAMES} PATHS $ENV{LIB_DIR}/bin)
   IF (NOT PYUIC_PROGRAM)
     MESSAGE(FATAL_ERROR "pyuic5 not found - aborting")
   ENDIF (NOT PYUIC_PROGRAM)
@@ -53,15 +45,7 @@ MACRO(PYQT_WRAP_UI outfiles )
 ENDMACRO(PYQT_WRAP_UI)
 
 IF(NOT PYRCC_PROGRAM)
-  IF (MSVC)
-    FIND_PROGRAM(PYRCC_PROGRAM
-      NAMES ${PYRCC_PROG_NAME}.bat
-      PATHS $ENV{LIB_DIR}/bin
-    )
-  ELSE(MSVC)
-    FIND_PROGRAM(PYRCC_PROGRAM ${PYRCC_PROG_NAME} PATHS $ENV{LIB_DIR}/bin)
-  ENDIF (MSVC)
-
+  FIND_PROGRAM(PYRCC_PROGRAM NAMES ${PYRCC_PROG_NAME} PATHS $ENV{LIB_DIR}/bin)
   IF (NOT PYRCC_PROGRAM)
     MESSAGE(FATAL_ERROR "pyrcc5 not found - aborting")
   ENDIF (NOT PYRCC_PROGRAM)
diff --git a/python/__init__.py b/python/__init__.py
index 0eb58512..643ccab2 100644
--- a/python/__init__.py
+++ b/python/__init__.py
@@ -66,6 +66,10 @@ if os.name == 'nt':
     # any of the QGIS modules or else it will error.
     setupenv()
 
+    if sys.version_info[0]>3 or (sys.version_info[0]==3 and sys.version_info[1]>=9):
+        for p in os.getenv("PATH").split(";"):
+            if os.path.exists(p):
+                os.add_dll_directory(p)
 
 from qgis.PyQt import QtCore
 
diff --git a/python/core/auto_generated/auth/qgsauthmanager.sip.in b/python/core/auto_generated/auth/qgsauthmanager.sip.in
index a0a02f71..a3a2b3cf 100644
--- a/python/core/auto_generated/auth/qgsauthmanager.sip.in
+++ b/python/core/auto_generated/auth/qgsauthmanager.sip.in
@@ -817,6 +817,7 @@ Clear an authentication config from its associated authentication method cache
 
   protected:
 
+    explicit QgsAuthManager();
 
   public:
   protected:
diff --git a/src/core/CMakeLists.txt b/src/core/CMakeLists.txt
index 512e936a..3e68fc4c 100644
--- a/src/core/CMakeLists.txt
+++ b/src/core/CMakeLists.txt
@@ -1530,9 +1530,7 @@ endif()
 protobuf_generate_cpp(VECTOR_TILE_PROTO_SRCS VECTOR_TILE_PROTO_HDRS vectortile/vector_tile.proto)
 set(QGIS_CORE_SRCS ${QGIS_CORE_SRCS} ${VECTOR_TILE_PROTO_SRCS})
 set(QGIS_CORE_HDRS ${QGIS_CORE_HDRS} ${VECTOR_TILE_PROTO_HDRS})
-if (MSVC)
-  set_source_files_properties(${VECTOR_TILE_PROTO_SRCS} vectortile/qgsvectortilemvtdecoder.cpp vectortile/qgsvectortilemvtencoder.cpp vectortile/qgsvectortilewriter.cpp PROPERTIES COMPILE_DEFINITIONS PROTOBUF_USE_DLLS)
-else()
+if (NOT MSVC)
   # automatically generated file produces warnings (unused-parameter, unused-variable, misleading-indentation)
   set_source_files_properties(${VECTOR_TILE_PROTO_SRCS} PROPERTIES COMPILE_FLAGS -w)
 endif()
diff --git a/src/native/win/qgswinnative.cpp b/src/native/win/qgswinnative.cpp
index 1622bf2b22..13eda842b3 100644
--- a/src/native/win/qgswinnative.cpp
+++ b/src/native/win/qgswinnative.cpp
@@ -64,7 +64,11 @@ void QgsWinNative::initializeMainWindow( QWindow *window,
   mTaskProgress = mTaskButton->progress();
   mTaskProgress->setVisible( false );
 
-  WinToastLib::WinToast::instance()->setAppName( applicationName.toStdWString() );
+  QString appName = qgetenv( "QGIS_WIN_APP_NAME" );
+  if ( appName.isEmpty() )
+    appName = applicationName;
+
+  WinToastLib::WinToast::instance()->setAppName( appName.toStdWString() );
   WinToastLib::WinToast::instance()->setAppUserModelId(
     WinToastLib::WinToast::configureAUMI( organizationName.toStdWString(),
                                           applicationName.toStdWString(),
