diff --git a/cmake/DevBaseExternal.cmake b/cmake/DevBaseExternal.cmake
index 0d91029..1cd7d84 100644
--- a/cmake/DevBaseExternal.cmake
+++ b/cmake/DevBaseExternal.cmake
@@ -40,19 +40,22 @@ endif()
 
 # Configure and find packages, configure project. ------------------------------
 if(DEVBASE_BOOST_REQUIRED)
-    set(Boost_USE_STATIC_LIBS OFF)
-    set(Boost_USE_STATIC_RUNTIME OFF)
-    add_definitions(
+    IF(NOT DEFINED Boost_USE_STATIC_LIBS)
+      set(Boost_USE_STATIC_LIBS OFF)
+      set(Boost_USE_STATIC_RUNTIME OFF)
+      add_definitions(
         # Use dynamic libraries.
         -DBOOST_ALL_DYN_LINK
         # Prevent auto-linking.
         -DBOOST_ALL_NO_LIB
 
-        # No deprecated features.
-        -DBOOST_FILESYSTEM_NO_DEPRECATED
-
         # -DBOOST_CHRONO_DONT_PROVIDE_HYBRID_ERROR_HANDLING
         # -DBOOST_CHRONO_HEADER_ONLY
+      )
+    ENDIF(NOT DEFINED Boost_USE_STATIC_LIBS)
+    add_definitions(
+        # No deprecated features.
+        -DBOOST_FILESYSTEM_NO_DEPRECATED
     )
     ### set(CMAKE_CXX_FLAGS_RELEASE
     ###     # Disable range checks in release builds.
@@ -158,12 +161,14 @@ if(DEVBASE_GDAL_USEFUL OR DEVBASE_GDAL_REQUIRED)
         HINTS ${GDAL_INCLUDE_DIR}/../bin
     )

-    if(EXISTS "${GDAL_INCLUDE_DIR}/../share/gdal")
+    if(EXISTS "$ENV{GDAL_DATA}")
+        set(GDAL_DATA "$ENV{GDAL_DATA}")
+    elseif(EXISTS "${GDAL_INCLUDE_DIR}/../share/gdal")
         set(GDAL_DATA "${GDAL_INCLUDE_DIR}/../share/gdal")
     elseif(EXISTS "${GDAL_INCLUDE_DIR}/../../share/gdal")
         set(GDAL_DATA "${GDAL_INCLUDE_DIR}/../../share/gdal")
     else()
-        message(FATAL_ERROR "GDal data dir not found")
+        message(FATAL_ERROR "GDAL data dir not found")
     endif()

     include(CheckGDalLibrary)
diff --git a/cmake/PeacockPlatform.cmake b/cmake/PeacockPlatform.cmake
index 54e649b..504e895 100644
--- a/cmake/PeacockPlatform.cmake
+++ b/cmake/PeacockPlatform.cmake
@@ -105,6 +105,9 @@ if(peacock_compiler_found)
         elseif(MSVC14)
             set(peacock_compiler_version "14")
             set(peacock_compiler_main_version "14")
+        elseif(MSVC19)
+            set(peacock_compiler_version "19")
+            set(peacock_compiler_main_version "19")
         endif()
     elseif(peacock_compiler_id STREQUAL "intel")
         # e.g.: 17.0.4.20170411
